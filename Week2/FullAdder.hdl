// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/FullAdder.hdl
/**
 * Computes the sum of three bits.
 */
CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    //start with halfadder 
    //-> based on c we modify it 
    //into taking previous carry into consideration
    HalfAdder(a=a , b=b , sum=tempSum , carry=tempCarry );
    //TT of HalfAdder:
    /*
    | a | b |sum|car|
    | 0 | 0 | 0 | 0 |
    | 0 | 1 | 1 | 0 |
    | 1 | 0 | 1 | 0 |
    | 1 | 1 | 0 | 1 |
    */
    // Remakr : tempSum interacts with c like Xor
    //Xor(a=tempSum , b=c , out=sum );
    // -> leads to correct sum, but does nothing for carry

    //final implementation idea
    //I cant input carry from previous opretaion to halfAdder
    // BUT I can input it as one of the numbers
    // -> Perform HalfAdd on a,b = tempSum,TempCarry
    // -> perform HalfAdd on tempSum, c = sum,TempCarry2
    // -> Next carry is 1. or 2. addition produced carry
    HalfAdder(a=tempSum , b=c , sum=sum , carry=tempCarry2 );
    Or(a=tempCarry,b=tempCarry2,out=carry);
}